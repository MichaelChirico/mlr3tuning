% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TunerGenSA.R
\name{TunerGenSA}
\alias{TunerGenSA}
\title{TunerGenSA}
\description{
Tuner child class to conduct generalized simulated annealing (GenSA) as tuning technique.
}
\section{Usage}{
\preformatted{tuner = TunerGenSA$new(pe, terminator, ...)
}

See \link{Tuner} for a description of the interface.
}

\section{Arguments}{

\itemize{
\item \code{pe} (\link{PerformanceEvaluator}):
Black box function used for the tuning.
\item \code{terminator} (\link{Terminator}):
Terminator to control the termination.
Will be triggered by the hooks of the \link{PerformanceEvaluator}.
\item \code{...}:
Additional arguments passed to \link[GenSA:GenSA]{GenSA::GenSA}.
}
}

\section{Details}{

\code{$new()} creates a new object of class \link{TunerGenSA}.
The interface is described in \link{Tuner}.
}

\examples{
task = mlr3::mlr_tasks$get("iris")
learner = mlr3::mlr_learners$get("classif.rpart")
resampling = mlr3::mlr_resamplings$get("cv")
resampling$param_set$values$folds = 2
measures = mlr3::mlr_measures$mget("classif.ce")
param_set = paradox::ParamSet$new(
  params = list(
    paradox::ParamDbl$new("cp", lower = 0.001, upper = 0.1)
  )
)
pe = PerformanceEvaluator$new(task, learner, resampling, measures, param_set)

terminator = TerminatorEvaluations$new(10)
rs = TunerGenSA$new(pe, terminator)
rs$tune()$tune_result()
}
\seealso{
Other Tuner: \code{\link{TunerGridSearch}},
  \code{\link{TunerRandomSearch}}, \code{\link{Tuner}}
}
\concept{Tuner}
